[{"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\index.js":"1","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\App.js":"2","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Menu.js":"3","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Login.js":"4","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Signup.js":"5","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\NotFound.js":"6","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Home.js":"7","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\About.js":"8","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\AddProducts.js":"9","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Cart.js":"10","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\db\\DBConfig.js":"11","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Products.js":"12","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\CartProducts.js":"13","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\IndividualProduct.js":"14","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\IndividualCartProduct.js":"15","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\mainCarousel.js":"16","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\MainNavbar.js":"17","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\PayPal.js":"18","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\MainCustom.js":"19"},{"size":238,"mtime":1638457543833,"results":"20","hashOfConfig":"21"},{"size":2187,"mtime":1639517630772,"results":"22","hashOfConfig":"21"},{"size":3409,"mtime":1639510832084,"results":"23","hashOfConfig":"21"},{"size":2307,"mtime":1638457543828,"results":"24","hashOfConfig":"21"},{"size":2938,"mtime":1638457543831,"results":"25","hashOfConfig":"21"},{"size":176,"mtime":1638457543830,"results":"26","hashOfConfig":"21"},{"size":543,"mtime":1639517683637,"results":"27","hashOfConfig":"21"},{"size":982,"mtime":1639436152780,"results":"28","hashOfConfig":"21"},{"size":4319,"mtime":1638457543826,"results":"29","hashOfConfig":"21"},{"size":5557,"mtime":1639517760936,"results":"30","hashOfConfig":"21"},{"size":1015,"mtime":1638457543831,"results":"31","hashOfConfig":"21"},{"size":374,"mtime":1638457543830,"results":"32","hashOfConfig":"21"},{"size":445,"mtime":1638457543827,"results":"33","hashOfConfig":"21"},{"size":825,"mtime":1638457543828,"results":"34","hashOfConfig":"21"},{"size":1892,"mtime":1638457543828,"results":"35","hashOfConfig":"21"},{"size":1356,"mtime":1639504418747,"results":"36","hashOfConfig":"21"},{"size":2146,"mtime":1639517630773,"results":"37","hashOfConfig":"21"},{"size":818,"mtime":1639519564571,"results":"38","hashOfConfig":"21"},{"size":1747,"mtime":1639517630772,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1eft4p8",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\index.js",[],["84","85"],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\App.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Menu.js",["86","87"],"import React,{useState, useEffect} from 'react'\r\nimport { Products } from './Products'\r\nimport {auth,fs} from './db/DBConfig'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // getting current user uid\r\n    function GetUserUid(){\r\n        const [uid, setUid]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    setUid(user.uid);\r\n                }\r\n            })\r\n        },[])\r\n        return uid;\r\n    }\r\n\r\n    const uid = GetUserUid();\r\n\r\n    // getting current user function\r\n    function GetCurrentUser(){\r\n        const [user, setUser]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('users').doc(user.uid).get().then(snapshot=>{\r\n                        setUser(snapshot.data().UserName);\r\n                    })\r\n                }\r\n                else{\r\n                    setUser(null);\r\n                }\r\n            })\r\n        },[])\r\n        return user;\r\n    }\r\n\r\n    const user = GetCurrentUser();\r\n    // console.log(user);\r\n    \r\n    // state of products\r\n    const [products, setProducts]=useState([]);\r\n\r\n    // getting products function\r\n    const getProducts = async ()=>{\r\n        const products = await fs.collection('Food-Item').get();\r\n        const productsArray = [];\r\n        for (var snap of products.docs){\r\n            var data = snap.data();\r\n            data.ID = snap.id;\r\n            productsArray.push({\r\n                ...data\r\n            })\r\n            if(productsArray.length === products.docs.length){\r\n                setProducts(productsArray);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getProducts();\r\n    },[])\r\n\r\n    // state of totalProducts\r\n    const [totalProducts, setTotalProducts]=useState(0);\r\n    // getting cart products   \r\n    useEffect(()=>{        \r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                    const qty = snapshot.docs.length;\r\n                    setTotalProducts(qty);\r\n                })\r\n            }\r\n        })       \r\n    },[])  \r\n\r\n    // globl variable\r\n    let Product;\r\n\r\n    // add to cart\r\n    const addToCart = async (product)=>{\r\n        if(uid!==null){\r\n            // console.log(product);\r\n            Product=product;\r\n            Product['qty']=1;\r\n            Product['TotalProductPrice']=Product.qty*Product[\"Item-Price\"];\r\n            fs.collection('Cart ' + uid).doc(product.ID).set(Product).then(()=>{\r\n                console.log('successfully added to cart');\r\n            })\r\n\r\n        }\r\n        else{\r\n           navigate('/login');\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>       \r\n            <br></br>\r\n            {products.length > 0 && (\r\n                <div className='container-fluid'>\r\n                    <h1 className='text-center'>Menu</h1>\r\n                    <div className='products-box'>\r\n                        <Products products={products} addToCart={addToCart}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {products.length < 1 && (\r\n                <div className='container-fluid'>Please wait....</div>\r\n            )}\r\n        </>\r\n    )\r\n}","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Login.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Signup.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\NotFound.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Home.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\About.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\AddProducts.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Cart.js",["88","89"],"import React,{useState, useEffect} from 'react'\r\nimport {auth,fs} from './db/DBConfig'\r\nimport { CartProducts } from './CartProducts';\r\nimport PayPal from './PayPal';\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n    // getting current user function\r\n    function GetCurrentUser(){\r\n        const [user, setUser]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('users').doc(user.uid).get().then(snapshot=>{\r\n                        setUser(snapshot.data().UserName);\r\n                    })\r\n                }\r\n                else{\r\n                    setUser(null);\r\n                }\r\n            })\r\n        },[])\r\n        return user;\r\n    }\r\n\r\n    const user = GetCurrentUser();\r\n    // console.log(user);\r\n    \r\n    // state of cart products\r\n    const [cartProducts, setCartProducts]=useState([]);\r\n\r\n    // getting cart products from firestore collection and updating the state\r\n    useEffect(()=>{\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                    const newCartProduct = snapshot.docs.map((doc)=>({\r\n                        ID: doc.id,\r\n                        ...doc.data(),\r\n                    }));\r\n                    setCartProducts(newCartProduct);                    \r\n                })\r\n            }\r\n            else{\r\n                console.log('user is not signed in to retrieve cart');\r\n            }\r\n        })\r\n    },[])\r\n\r\n    // console.log(cartProducts);\r\n    \r\n    // getting the qty from cartProducts in a seperate array\r\n    const qty = cartProducts.map(cartProduct=>{\r\n        return cartProduct.qty;\r\n    })\r\n\r\n    // reducing the qty in a single value\r\n    const reducerOfQty = (accumulator, currentValue)=>accumulator+currentValue;\r\n\r\n    const totalQty = qty.reduce(reducerOfQty,0);\r\n\r\n    // console.log(totalQty);\r\n\r\n    // getting the TotalProductPrice from cartProducts in a seperate array\r\n    const price = cartProducts.map((cartProduct)=>{\r\n        return cartProduct.TotalProductPrice;\r\n    })\r\n\r\n    // reducing the price in a single value\r\n    const reducerOfPrice = (accumulator,currentValue)=>accumulator+currentValue;\r\n\r\n    const totalPrice = price.reduce(reducerOfPrice,0);\r\n\r\n    // global variable\r\n    let Product;\r\n    \r\n    // cart product increase function\r\n    const cartProductIncrease=(cartProduct)=>{\r\n        // console.log(cartProduct);\r\n        Product=cartProduct;\r\n        Product.qty=Product.qty+1;\r\n        Product.TotalProductPrice=Product[\"Item-Price\"]*Product.qty;\r\n        // updating in database\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).doc(cartProduct.ID).update(Product).then(()=>{\r\n                    console.log('increment added');\r\n                })\r\n            }\r\n            else{\r\n                console.log('user is not logged in to increment');\r\n            }\r\n        })\r\n    }\r\n\r\n    // cart product decrease functionality\r\n    const cartProductDecrease =(cartProduct)=>{\r\n        Product=cartProduct;\r\n        if(Product.qty > 1){\r\n            Product.qty=Product.qty-1;\r\n            Product.TotalProductPrice=Product.qty*Product[\"Item-Price\"];\r\n             // updating in database\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('Cart ' + user.uid).doc(cartProduct.ID).update(Product).then(()=>{\r\n                        console.log('decrement');\r\n                    })\r\n                }\r\n                else{\r\n                    console.log('user is not logged in to decrement');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n     // state of totalProducts\r\n     const [totalProducts, setTotalProducts]=useState(0);\r\n     // getting cart products   \r\n     useEffect(()=>{        \r\n         auth.onAuthStateChanged(user=>{\r\n             if(user){\r\n                 fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                     const qty = snapshot.docs.length;\r\n                     setTotalProducts(qty);\r\n                 })\r\n             }\r\n         })       \r\n     },[])  \r\n\r\n    \r\n    return (\r\n        <>         \r\n            <br></br>\r\n            {cartProducts.length > 0 && (\r\n                <div className='container-fluid'>\r\n                    <h1 className='text-center'>Cart</h1>\r\n                    <div className='products-box'>\r\n                        <CartProducts cartProducts={cartProducts}\r\n                           cartProductIncrease={cartProductIncrease}\r\n                           cartProductDecrease={cartProductDecrease}\r\n                        />\r\n                    </div>\r\n                    <div className='summary-box'>\r\n                        <h5>Cart Summary</h5>\r\n                        <br></br>\r\n                        <div>\r\n                        Total No. of Products: <span>{totalQty}</span>\r\n                        </div>\r\n                        <div>\r\n                        Total Price to Pay: <span>$ {totalPrice}</span>\r\n                        </div>\r\n                        <br></br>\r\n                        <PayPal dataParentToChild={totalPrice}></PayPal>\r\n                    </div>                                    \r\n                </div>\r\n            )}\r\n            {cartProducts.length < 1 && (\r\n                <div className='container-fluid'>No products to show</div>\r\n            ) }           \r\n        </>\r\n    )\r\n}","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\db\\DBConfig.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\Products.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\CartProducts.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\IndividualProduct.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\IndividualCartProduct.js",["90","91"],"import React from 'react'\r\n\r\nimport {auth,fs} from './db/DBConfig'\r\n\r\nexport const IndividualCartProduct = ({cartProduct,cartProductIncrease,cartProductDecrease}) => {\r\n\r\n    const handleCartProductIncrease=()=>{\r\n        cartProductIncrease(cartProduct);\r\n    }\r\n\r\n    const handleCartProductDecrease=()=>{\r\n        cartProductDecrease(cartProduct);\r\n    }\r\n\r\n    const handleCartProductDelete=()=>{\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).doc(cartProduct.ID).delete().then(()=>{\r\n                    console.log('successfully deleted');\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className='product'>\r\n            <div className='product-img'>\r\n                <img src={cartProduct[\"Image-Dest\"]} alt=\"product-img\"/>\r\n            </div>\r\n            <div className='product-text title'>{cartProduct[\"Item-Name\"]}</div>\r\n            <div className='product-text description'>{cartProduct[\"Item-Description\"]}</div>\r\n            <div className='product-text price'>$ {cartProduct[\"Item-Price\"]}</div>\r\n            <span>Quantity</span>\r\n            <div className='product-text quantity-box'>\r\n                <div className='action-btns minus' onClick={handleCartProductDecrease} >\r\n                    <img src=\"Menu-Pictures/minus.png\"/>\r\n                </div>                \r\n                <div>{cartProduct.qty}</div>               \r\n                <div className='action-btns plus' onClick={handleCartProductIncrease}>\r\n                    <img src=\"Menu-Pictures/plus.png\"/>\r\n                </div>\r\n            </div>\r\n            <div className='product-text cart-price'>$ {cartProduct.TotalProductPrice}</div>\r\n            <div className='btn btn-danger btn-md cart-btn' onClick={handleCartProductDelete} >DELETE</div>            \r\n        </div>\r\n    )\r\n}","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\mainCarousel.js",[],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\MainNavbar.js",["92"],"import React from 'react'\r\nimport {auth} from './db/DBConfig'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport const MainNavbar = ({user,totalProducts}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout=()=>{\r\n        auth.signOut().then(()=>{\r\n            navigate('/login');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n         <Container>\r\n        <Navbar.Brand href=\"/\">Cookies And Cake</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\r\n                {!user&&<>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t            \t<Nav className=\"me-auto\">\r\n                    <Link className=\"nav-link\" to=\"About\">About</Link>\r\n                    <Link className=\"nav-link\" to=\"Menu\"> Menu</Link>\r\n                    <Link className=\"nav-link\" to=\"Custom\">Custom</Link>\r\n                    <Link className=\"nav-link\" to=\"signup\">Sign Up</Link>\r\n                    <Link className=\"nav-link\" to=\"login\">Login</Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </>} \r\n\r\n                {user&&<>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                    <Link className=\"nav-link\" to=\"About\"> About</Link>\r\n                    <Link className=\"nav-link\" to=\"Menu\"> Menu</Link>\r\n                    <Link className=\"nav-link\" to=\"Custom\"> Custom</Link>\r\n                    <Link className=\"nav-link\" to=\"/\">Logged in: {user}</Link>\r\n                    <Link className=\"nav-link\" to=\"cart\"><img src=\"Menu-Pictures/cart.png\"/> <span className='cart-indicator'>{totalProducts}</span></Link>   \r\n                    <div className='btn btn-danger btn-md'\r\n                    onClick={handleLogout}>Logout</div>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </>}                     \r\n            </Container>              \r\n            </Navbar>\r\n    )\r\n}","C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\PayPal.js",["93","94"],"C:\\Users\\Bryson\\projects\\cookies-and-cake\\src\\Components\\MainCustom.js",["95","96"],"import React,{useState} from 'react'\r\n\r\nexport const MainCustom = () => {\r\n  const [imageError, setImageError]=useState('');\r\n  const [image, setImage]=useState(null);\r\n\r\n  const types =['image/jpg','image/jpeg','image/png','image/PNG'];\r\n  const handleProductImg=(e)=>{\r\n      let selectedFile = e.target.files[0];\r\n      if(selectedFile){\r\n          if(selectedFile&&types.includes(selectedFile.type)){\r\n              setImage(selectedFile);\r\n              setImageError('');\r\n          }\r\n          else{\r\n              setImage(null);\r\n              setImageError('please select a valid image file type (png or jpg)')\r\n          }\r\n      }\r\n      else{\r\n          console.log('please select your file');\r\n      }\r\n  }\r\n\r\n  return (\r\n      <div className='container border' style={{marginTop:\"50px\",\r\n      width: \"55%\"}}>\r\n        <img src=\"Menu-Pictures/cookiesandc.jpg\" className=\"logo mx-auto d-block banner\" alt=\"The logo of cookies and cake\" fluid />\r\n         <h1>Custom Order Form</h1>\r\n      <form className='row' style={{margin:\"30px 30px 30px 30px\"}}>\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" placeholder=\"John Doe\" className='form-control'/>\r\n\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"user_email\" placeholder=\"name@example.com\" className='form-control'/>\r\n\r\n        <label>Custom Cake Description</label>\r\n        <textarea name=\"message\" rows=\"4\" className='form-control'/>\r\n        \r\n        <label>Upload Image</label>\r\n        <input type=\"file\" id=\"file\" \r\n        onChange={handleProductImg}></input>\r\n        \r\n\r\n        <input type = \"submit\" value=\"Send\" className='form-control btn btn-success'\r\n        style={{marginTop:'30px'}}/>\r\n      </form>\r\n      </div> \r\n  )\r\n}",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":42,"column":11,"nodeType":"103","messageId":"104","endLine":42,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":69,"column":12,"nodeType":"103","messageId":"104","endLine":69,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":27,"column":11,"nodeType":"103","messageId":"104","endLine":27,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":118,"column":13,"nodeType":"103","messageId":"104","endLine":118,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":36,"column":21,"nodeType":"108","endLine":36,"endColumn":57},{"ruleId":"106","severity":1,"message":"107","line":40,"column":21,"nodeType":"108","endLine":40,"endColumn":56},{"ruleId":"106","severity":1,"message":"107","line":43,"column":58,"nodeType":"108","endLine":43,"endColumn":93},{"ruleId":"101","severity":1,"message":"109","line":7,"column":9,"nodeType":"103","messageId":"104","endLine":7,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":21,"column":9,"nodeType":"103","messageId":"104","endLine":21,"endColumn":18},{"ruleId":"101","severity":1,"message":"111","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":20},{"ruleId":"101","severity":1,"message":"112","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":15},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'totalProducts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createOrder' is assigned a value but never used.","'onApprove' is assigned a value but never used.","'imageError' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]