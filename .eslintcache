[{"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\index.js":"1","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\App.js":"2","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Cart.js":"3","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Signup.js":"4","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Login.js":"5","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\NotFound.js":"6","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\mainCarousel.js":"7","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\About.js":"8","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Menu.js":"9","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Home.js":"10","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\AddProducts.js":"11","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Products.js":"12","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\CartProducts.js":"13","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\IndividualCartProduct.js":"14","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\IndividualProduct.js":"15","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\db\\DBConfig.js":"16","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\MainNavbar.js":"17"},{"size":238,"mtime":1639439838730,"results":"18","hashOfConfig":"19"},{"size":2095,"mtime":1639507567230,"results":"20","hashOfConfig":"19"},{"size":5448,"mtime":1637692516717,"results":"21","hashOfConfig":"19"},{"size":2938,"mtime":1639506367500,"results":"22","hashOfConfig":"19"},{"size":2307,"mtime":1639506367488,"results":"23","hashOfConfig":"19"},{"size":176,"mtime":1637633827668,"results":"24","hashOfConfig":"19"},{"size":1356,"mtime":1639506375766,"results":"25","hashOfConfig":"19"},{"size":982,"mtime":1639506375765,"results":"26","hashOfConfig":"19"},{"size":3409,"mtime":1637692639562,"results":"27","hashOfConfig":"19"},{"size":546,"mtime":1639506375765,"results":"28","hashOfConfig":"19"},{"size":4319,"mtime":1639506367487,"results":"29","hashOfConfig":"19"},{"size":374,"mtime":1637633849013,"results":"30","hashOfConfig":"19"},{"size":445,"mtime":1637651611191,"results":"31","hashOfConfig":"19"},{"size":1892,"mtime":1637651551848,"results":"32","hashOfConfig":"19"},{"size":825,"mtime":1637647238945,"results":"33","hashOfConfig":"19"},{"size":1015,"mtime":1637643918930,"results":"34","hashOfConfig":"19"},{"size":1912,"mtime":1639445281942,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"c9qkf2",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\index.js",[],["75","76"],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\App.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Cart.js",["77","78"],"import React,{useState, useEffect} from 'react'\r\nimport {auth,fs} from './db/DBConfig'\r\nimport { CartProducts } from './CartProducts';\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n    // getting current user function\r\n    function GetCurrentUser(){\r\n        const [user, setUser]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('users').doc(user.uid).get().then(snapshot=>{\r\n                        setUser(snapshot.data().UserName);\r\n                    })\r\n                }\r\n                else{\r\n                    setUser(null);\r\n                }\r\n            })\r\n        },[])\r\n        return user;\r\n    }\r\n\r\n    const user = GetCurrentUser();\r\n    // console.log(user);\r\n    \r\n    // state of cart products\r\n    const [cartProducts, setCartProducts]=useState([]);\r\n\r\n    // getting cart products from firestore collection and updating the state\r\n    useEffect(()=>{\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                    const newCartProduct = snapshot.docs.map((doc)=>({\r\n                        ID: doc.id,\r\n                        ...doc.data(),\r\n                    }));\r\n                    setCartProducts(newCartProduct);                    \r\n                })\r\n            }\r\n            else{\r\n                console.log('user is not signed in to retrieve cart');\r\n            }\r\n        })\r\n    },[])\r\n\r\n    // console.log(cartProducts);\r\n    \r\n    // getting the qty from cartProducts in a seperate array\r\n    const qty = cartProducts.map(cartProduct=>{\r\n        return cartProduct.qty;\r\n    })\r\n\r\n    // reducing the qty in a single value\r\n    const reducerOfQty = (accumulator, currentValue)=>accumulator+currentValue;\r\n\r\n    const totalQty = qty.reduce(reducerOfQty,0);\r\n\r\n    // console.log(totalQty);\r\n\r\n    // getting the TotalProductPrice from cartProducts in a seperate array\r\n    const price = cartProducts.map((cartProduct)=>{\r\n        return cartProduct.TotalProductPrice;\r\n    })\r\n\r\n    // reducing the price in a single value\r\n    const reducerOfPrice = (accumulator,currentValue)=>accumulator+currentValue;\r\n\r\n    const totalPrice = price.reduce(reducerOfPrice,0);\r\n\r\n    // global variable\r\n    let Product;\r\n    \r\n    // cart product increase function\r\n    const cartProductIncrease=(cartProduct)=>{\r\n        // console.log(cartProduct);\r\n        Product=cartProduct;\r\n        Product.qty=Product.qty+1;\r\n        Product.TotalProductPrice=Product[\"Item-Price\"]*Product.qty;\r\n        // updating in database\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).doc(cartProduct.ID).update(Product).then(()=>{\r\n                    console.log('increment added');\r\n                })\r\n            }\r\n            else{\r\n                console.log('user is not logged in to increment');\r\n            }\r\n        })\r\n    }\r\n\r\n    // cart product decrease functionality\r\n    const cartProductDecrease =(cartProduct)=>{\r\n        Product=cartProduct;\r\n        if(Product.qty > 1){\r\n            Product.qty=Product.qty-1;\r\n            Product.TotalProductPrice=Product.qty*Product[\"Item-Price\"];\r\n             // updating in database\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('Cart ' + user.uid).doc(cartProduct.ID).update(Product).then(()=>{\r\n                        console.log('decrement');\r\n                    })\r\n                }\r\n                else{\r\n                    console.log('user is not logged in to decrement');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n     // state of totalProducts\r\n     const [totalProducts, setTotalProducts]=useState(0);\r\n     // getting cart products   \r\n     useEffect(()=>{        \r\n         auth.onAuthStateChanged(user=>{\r\n             if(user){\r\n                 fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                     const qty = snapshot.docs.length;\r\n                     setTotalProducts(qty);\r\n                 })\r\n             }\r\n         })       \r\n     },[])  \r\n   \r\n    return (\r\n        <>         \r\n            <br></br>\r\n            {cartProducts.length > 0 && (\r\n                <div className='container-fluid'>\r\n                    <h1 className='text-center'>Cart</h1>\r\n                    <div className='products-box'>\r\n                        <CartProducts cartProducts={cartProducts}\r\n                           cartProductIncrease={cartProductIncrease}\r\n                           cartProductDecrease={cartProductDecrease}\r\n                        />\r\n                    </div>\r\n                    <div className='summary-box'>\r\n                        <h5>Cart Summary</h5>\r\n                        <br></br>\r\n                        <div>\r\n                        Total No. of Products: <span>{totalQty}</span>\r\n                        </div>\r\n                        <div>\r\n                        Total Price to Pay: <span>$ {totalPrice}</span>\r\n                        </div>\r\n                        <br></br>\r\n                    </div>                                    \r\n                </div>\r\n            )}\r\n            {cartProducts.length < 1 && (\r\n                <div className='container-fluid'>No products to show</div>\r\n            ) }           \r\n        </>\r\n    )\r\n}","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Signup.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Login.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\NotFound.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\mainCarousel.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\About.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Menu.js",["79","80"],"import React,{useState, useEffect} from 'react'\r\nimport { Products } from './Products'\r\nimport {auth,fs} from './db/DBConfig'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // getting current user uid\r\n    function GetUserUid(){\r\n        const [uid, setUid]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    setUid(user.uid);\r\n                }\r\n            })\r\n        },[])\r\n        return uid;\r\n    }\r\n\r\n    const uid = GetUserUid();\r\n\r\n    // getting current user function\r\n    function GetCurrentUser(){\r\n        const [user, setUser]=useState(null);\r\n        useEffect(()=>{\r\n            auth.onAuthStateChanged(user=>{\r\n                if(user){\r\n                    fs.collection('users').doc(user.uid).get().then(snapshot=>{\r\n                        setUser(snapshot.data().UserName);\r\n                    })\r\n                }\r\n                else{\r\n                    setUser(null);\r\n                }\r\n            })\r\n        },[])\r\n        return user;\r\n    }\r\n\r\n    const user = GetCurrentUser();\r\n    // console.log(user);\r\n    \r\n    // state of products\r\n    const [products, setProducts]=useState([]);\r\n\r\n    // getting products function\r\n    const getProducts = async ()=>{\r\n        const products = await fs.collection('Food-Item').get();\r\n        const productsArray = [];\r\n        for (var snap of products.docs){\r\n            var data = snap.data();\r\n            data.ID = snap.id;\r\n            productsArray.push({\r\n                ...data\r\n            })\r\n            if(productsArray.length === products.docs.length){\r\n                setProducts(productsArray);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getProducts();\r\n    },[])\r\n\r\n    // state of totalProducts\r\n    const [totalProducts, setTotalProducts]=useState(0);\r\n    // getting cart products   \r\n    useEffect(()=>{        \r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).onSnapshot(snapshot=>{\r\n                    const qty = snapshot.docs.length;\r\n                    setTotalProducts(qty);\r\n                })\r\n            }\r\n        })       \r\n    },[])  \r\n\r\n    // globl variable\r\n    let Product;\r\n\r\n    // add to cart\r\n    const addToCart = async (product)=>{\r\n        if(uid!==null){\r\n            // console.log(product);\r\n            Product=product;\r\n            Product['qty']=1;\r\n            Product['TotalProductPrice']=Product.qty*Product[\"Item-Price\"];\r\n            fs.collection('Cart ' + uid).doc(product.ID).set(Product).then(()=>{\r\n                console.log('successfully added to cart');\r\n            })\r\n\r\n        }\r\n        else{\r\n           navigate('/login');\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>       \r\n            <br></br>\r\n            {products.length > 0 && (\r\n                <div className='container-fluid'>\r\n                    <h1 className='text-center'>Menu</h1>\r\n                    <div className='products-box'>\r\n                        <Products products={products} addToCart={addToCart}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {products.length < 1 && (\r\n                <div className='container-fluid'>Please wait....</div>\r\n            )}\r\n        </>\r\n    )\r\n}","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Home.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\AddProducts.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\Products.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\CartProducts.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\IndividualCartProduct.js",["81","82"],"import React from 'react'\r\n\r\nimport {auth,fs} from './db/DBConfig'\r\n\r\nexport const IndividualCartProduct = ({cartProduct,cartProductIncrease,cartProductDecrease}) => {\r\n\r\n    const handleCartProductIncrease=()=>{\r\n        cartProductIncrease(cartProduct);\r\n    }\r\n\r\n    const handleCartProductDecrease=()=>{\r\n        cartProductDecrease(cartProduct);\r\n    }\r\n\r\n    const handleCartProductDelete=()=>{\r\n        auth.onAuthStateChanged(user=>{\r\n            if(user){\r\n                fs.collection('Cart ' + user.uid).doc(cartProduct.ID).delete().then(()=>{\r\n                    console.log('successfully deleted');\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className='product'>\r\n            <div className='product-img'>\r\n                <img src={cartProduct[\"Image-Dest\"]} alt=\"product-img\"/>\r\n            </div>\r\n            <div className='product-text title'>{cartProduct[\"Item-Name\"]}</div>\r\n            <div className='product-text description'>{cartProduct[\"Item-Description\"]}</div>\r\n            <div className='product-text price'>$ {cartProduct[\"Item-Price\"]}</div>\r\n            <span>Quantity</span>\r\n            <div className='product-text quantity-box'>\r\n                <div className='action-btns minus' onClick={handleCartProductDecrease} >\r\n                    <img src=\"Menu-Pictures/minus.png\"/>\r\n                </div>                \r\n                <div>{cartProduct.qty}</div>               \r\n                <div className='action-btns plus' onClick={handleCartProductIncrease}>\r\n                    <img src=\"Menu-Pictures/plus.png\"/>\r\n                </div>\r\n            </div>\r\n            <div className='product-text cart-price'>$ {cartProduct.TotalProductPrice}</div>\r\n            <div className='btn btn-danger btn-md cart-btn' onClick={handleCartProductDelete} >DELETE</div>            \r\n        </div>\r\n    )\r\n}","G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\IndividualProduct.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\db\\DBConfig.js",[],"G:\\Colin's homework\\SeniorProject\\cookies-and-cake\\src\\Components\\MainNavbar.js",["83"],"import React from 'react'\r\nimport {auth} from './db/DBConfig'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport const MainNavbar = ({user,totalProducts}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout=()=>{\r\n        auth.signOut().then(()=>{\r\n            navigate('/login');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n         <Container>\r\n        <Navbar.Brand href=\"/\">Cookies And Cake</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\r\n                {!user&&<>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t            \t<Nav className=\"me-auto\">\r\n                    <Nav.Link  href=\"About\"> About</Nav.Link>\r\n                    <Nav.Link  href=\"Menu\"> Menu</Nav.Link>\r\n                    <Nav.Link  href=\"signup\">Sign Up</Nav.Link>\r\n                    <Nav.Link  href=\"login\">Login</Nav.Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </>} \r\n\r\n                {user&&<>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                    <Nav.Link  href=\"About\"> About</Nav.Link>\r\n                    <Nav.Link  href=\"Menu\"> Menu</Nav.Link>\r\n                    <Nav.Link  href=\"/\">Logged in: {user}</Nav.Link>\r\n                    <Nav.Link  href=\"cart\"><img src=\"Menu-Pictures/cart.png\"/> <span className='cart-indicator'>{totalProducts}</span></Nav.Link>   \r\n                    <div className='btn btn-danger btn-md'\r\n                    onClick={handleLogout}>Logout</div>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </>}                     \r\n            </Container>              \r\n            </Navbar>\r\n    )\r\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":26,"column":11,"nodeType":"90","messageId":"91","endLine":26,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":117,"column":13,"nodeType":"90","messageId":"91","endLine":117,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":42,"column":11,"nodeType":"90","messageId":"91","endLine":42,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":69,"column":12,"nodeType":"90","messageId":"91","endLine":69,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":36,"column":21,"nodeType":"95","endLine":36,"endColumn":57},{"ruleId":"93","severity":1,"message":"94","line":40,"column":21,"nodeType":"95","endLine":40,"endColumn":56},{"ruleId":"93","severity":1,"message":"94","line":41,"column":44,"nodeType":"95","endLine":41,"endColumn":79},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'totalProducts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]